from datetime import date
import os

from test.tasktest import *
from wpiformat.config import Config
from wpiformat.licenseupdate import LicenseUpdate


def test_licenseupdate():
    year = str(date.today().year)

    task = LicenseUpdate(year)
    test = TaskTest(task)

    file_appendix = \
        "#pragma once" + os.linesep + \
        os.linesep + \
        "#include <iostream>" + os.linesep + \
        os.linesep + \
        "int main() {" + os.linesep + \
        "  std::cout << \"Hello World!\";" + os.linesep + \
        "}"

    # pragma once at top of file
    test.add_input("./Test.h", file_appendix)
    test.add_output(
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) {} Company Name. All Rights Reserved.                      */".
        format(year) + os.linesep + os.linesep + file_appendix, True, True)

    # pragma once at top of file preceded by newline
    test.add_input("./Test.h", os.linesep + file_appendix)
    test.add_output(
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) {} Company Name. All Rights Reserved.                      */".
        format(year) + os.linesep + os.linesep + file_appendix, True, True)

    # File containing up-to-date license preceded by newline
    test.add_input(
        "./Test.h", os.linesep +
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) {} Company Name. All Rights Reserved.                      */".
        format(year) + os.linesep + os.linesep + file_appendix)
    test.add_output(
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) {} Company Name. All Rights Reserved.                      */".
        format(year) + os.linesep + os.linesep + file_appendix, True, True)

    # File containing up-to-date range license
    test.add_input(
        "./Test.h",
        "/*                                Company Name                                */"
        + os.linesep +
        "// Copyright (c) 2011-{} Company Name. All Rights Reserved.".format(
            year) + os.linesep + os.linesep + file_appendix)
    test.add_output(
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) 2011-{} Company Name. All Rights Reserved.                 */".
        format(year) + os.linesep + os.linesep + file_appendix, True, True)

    # File containing up-to-date license with one year
    test.add_input(
        "./Test.h",
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) {} Company Name. All Rights Reserved.                      */".
        format(year) + os.linesep + os.linesep + file_appendix)
    test.add_latest_input_as_output(True)

    # File with three newlines between license and include guard
    test.add_input(
        "./Test.h",
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) {} Company Name. All Rights Reserved.                      */".
        format(year) + os.linesep + os.linesep + os.linesep + file_appendix)
    test.add_output(
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) {} Company Name. All Rights Reserved.                      */".
        format(year) + os.linesep + os.linesep + file_appendix, True, True)

    # File with only one newline between license and include guard
    test.add_input(
        "./Test.h",
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) {} Company Name. All Rights Reserved.                      */".
        format(year) + os.linesep + file_appendix)
    test.add_output(
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) {} Company Name. All Rights Reserved.                      */".
        format(year) + os.linesep + os.linesep + file_appendix, True, True)

    # File with multiline comment spanning multiple lines of license header
    test.add_input(
        "./Test.h", "/*" + os.linesep +
        " * Autogenerated file! Do not manually edit this file. This version is regenerated"
        + os.linesep +
        " * any time the publish task is run, or when this file is deleted." +
        os.linesep + " */" + os.linesep + os.linesep +
        "const char* WPILibVersion = \"\";")
    test.add_output(
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) {} Company Name. All Rights Reserved.                      */".
        format(year) + os.linesep + os.linesep + "/*" + os.linesep +
        " * Autogenerated file! Do not manually edit this file. This version is regenerated"
        + os.linesep +
        " * any time the publish task is run, or when this file is deleted." +
        os.linesep + " */" + os.linesep + os.linesep +
        "const char* WPILibVersion = \"\";", True, True)

    # File containing license year range in different postion than template
    # (If the year isn't extracted, the range will be replaced with one year and
    # the test will fail.)
    test.add_input(
        "./Test.h",
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) Company Name 2011-{}. All Rights Reserved.                 */".
        format(year) + os.linesep + os.linesep + file_appendix)
    test.add_output(
        "/*                                Company Name                                */"
        + os.linesep +
        "/* Copyright (c) 2011-{} Company Name. All Rights Reserved.                 */".
        format(year) + os.linesep + os.linesep + file_appendix, True, True)

    # File excluded from license update isn't modified
    test.add_input(
        "./Excluded.h", "/* Copyright (c) Company Name 2011-{}. */".format(year)
        + os.linesep + os.linesep + file_appendix)
    test.add_output(
        "/* Copyright (c) Company Name 2011-{}. */".format(year) + os.linesep +
        os.linesep + file_appendix, False, True)

    # Ensure excluded files won't be processed
    config_file = Config(os.path.abspath(os.getcwd()), ".styleguide")
    assert not task.should_process_file(config_file, "./Excluded.h")

    test.run(OutputType.FILE)
