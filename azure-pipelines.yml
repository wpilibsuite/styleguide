# Gradle
# Build your Java projects and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/java

resources:
  containers:
  - container: ubuntu18
    image: ubuntu:18.04
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"

jobs:
  - job: Linux
    pool:
      vmImage: 'Ubuntu 16.04'

    container: ubuntu18

    steps:
        - script: |
            /tmp/docker exec -t -u 0 ci-container \
            sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
          displayName: Set up sudo
        - script: |
            sudo apt-get update -y
            sudo apt-get install clang-format gcc g++ python3-setuptools python3-dev git -y
          displayName: 'Install Dependencies'
        - script: |
            git fetch --unshallow
            cd wpiformat
            python3 setup.py build
            sudo python3 setup.py install --optimize=1 --skip-build
          displayName: 'Build'
        - script: |
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            git checkout -b pr
            git checkout master
            git checkout pr
          displayName: 'Make sure .git/refs/heads/master exists'
        - script: |
            cd wpiformat
            python3 setup.py test
          displayName: 'Run unit tests'
        - script: |
            python3 -m wpiformat -v
          displayName: 'Run wpiformat'
        - script: |
            cd wpiformat
            python3 -m wpiformat -f wpiformat/__init__.py -v
          displayName: 'One file'
        - script: |
            cd wpiformat
            python3 -m wpiformat -f /__w/1/s/wpiformat/wpiformat/__init__.py -v
          displayName: 'Absolute path to file'
        - script: |
            cd wpiformat
            python3 -m wpiformat -f wpiformat/__init__.py wpiformat/__main__.py -v
          displayName: 'Multiple files'
        - script: |
            cd wpiformat
            python3 -m wpiformat -f wpiformat -v
          displayName: 'Directory'
        - script: |
            git --no-pager diff --exit-code HEAD
          displayName: 'Ensure formatter made no changes'

  - job: Windows
    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - script: |
          choco install llvm --version 6.0.1
        displayName: 'Install Dependencies'
      - script: |
          git fetch --unshallow
          cd wpiformat
          py -3 setup.py build
          py -3 setup.py install --optimize=1 --skip-build
        displayName: 'Build'
      - powershell: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git checkout -b pr
          git checkout master
          git checkout pr
        displayName: 'Make sure .git/refs/heads/master exists'
      - powershell: |
          cd wpiformat
          py -3 setup.py test
        displayName: 'Run unit tests'
      - powershell: |
          py -3 -m wpiformat -v
        displayName: 'Run wpiformat'
      - powershell: |
          cd wpiformat
          py -3 -m wpiformat -f wpiformat\__init__.py -v
        displayName: 'One file'
      - powershell: |
          cd wpiformat
          py -3 -m wpiformat -f D:\a\1\s\wpiformat\wpiformat\__init__.py -v
        displayName: 'Absolute path to file'
      - powershell: |
          cd wpiformat
          py -3 -m wpiformat -f wpiformat\__init__.py wpiformat\__main__.py -v
        displayName: 'Multiple files'
      - powershell: |
          cd wpiformat
          py -3 -m wpiformat -f wpiformat -v
        displayName: 'Directory'
      - powershell: |
          git --no-pager diff --exit-code HEAD
        displayName: 'Ensure formatter made no changes'
